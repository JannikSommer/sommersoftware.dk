@model List<sommersoftware.dk.Models.MySalaryModels.YearModel>
@{
    ViewData["Title"] = "Dashboard";
    var settings = ViewData["Settings"] as sommersoftware.dk.Models.MySalaryModels.SettingsModel;

    var currentMonth = DateTime.Now.Month.ToString();
    var currentYear = DateTime.Now.Year.ToString();
    var date = DateTime.Now.ToString("MMMM yyyy");

    var ModelList = Model.ToList();
    MonthModel currentPeriod = ModelList[0].Months[0];

    foreach (YearModel year in Model)
    {
        if (year.YearNumber == Int32.Parse(currentYear))
        {
            foreach (MonthModel month in year.Months)
            {
                if (month.GetMonthAsNumber() == Int32.Parse(currentMonth))
                {
                    currentPeriod = month;
                    break;
                }
            }
        }
    }
}
<head>
    <!-- Favicons -->
    <link rel="apple-touch-icon" href="/docs/5.0/assets/img/favicons/apple-touch-icon.png" sizes="180x180">
    <link rel="icon" href="/docs/5.0/assets/img/favicons/favicon-32x32.png" sizes="32x32" type="image/png">
    <link rel="icon" href="/docs/5.0/assets/img/favicons/favicon-16x16.png" sizes="16x16" type="image/png">
    <link rel="manifest" href="/docs/5.0/assets/img/favicons/manifest.json">
    <link rel="mask-icon" href="/docs/5.0/assets/img/favicons/safari-pinned-tab.svg" color="#7952b3">
    <link rel="icon" href="/docs/5.0/assets/img/favicons/favicon.ico">
    <meta name="theme-color" content="#7952b3">
</head>

<script type="text/javascript">
    window.onload = function saveData() {
        var settings = {
            CalendarLink: '@Html.Raw(settings.CalendarLink)',
            ShiftKeyword: '@settings.ShiftKeyword',
            BeginDate: '@DateTime.Parse(settings.BeginDate.ToString("d")).ToString("yyyy-MM-dd")',
            EndDate: '@DateTime.Parse(settings.EndDate.ToString("d")).ToString("yyyy-MM-dd")',
            HourWage: @settings.HourWage,
            EveningWage: @settings.EveningWage,
            SaturdayWage: @settings.SaturdayWage,
            SundayWage: @settings.SundayWage,
            TotalTaxPercentage: @settings.TotalTaxPercentage,
            TotalTaxDeduction: @settings.TotalTaxDeduction,
        }
        this.localStorage.setItem('key', JSON.stringify(settings));
        currentMonth = "@DateTime.Now.Month.ToString()";
        currentYear = "@DateTime.Now.Year.ToString()";
        date = "@DateTime.Now.ToString("MMMM yyyy")";
    }

    function createShiftList(monthIndex) {

    }
</script>

<hr />


<div class="container-fluid">
    <div class="row">
        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link active" >
                            <h3>Years</h3>
                            <hr />
                        </a>
                    </li>
                    @{
                        int yearcounter = 0;
                        foreach (YearModel year in Model)
                        {
                            <li class="nav-item">
                                <a class="nav-link active" aria-current="page" href="#">
                                    <h5>@year.YearNumber </h5>
                                </a>
                            </li>
                        }
                    }
                    <li class="nav-item">
                        <a class="nav-link active">
                            <h3>Months</h3>
                            <hr />
                        </a>
                    </li>
                    @{
                        int monthIndex = 0;
                        foreach(YearModel year in Model)
                        {
                            @foreach(MonthModel month in year.Months)
                            {
                                <li class="nav-item">
                                    <button class="btn btn-link " onclick="createShiftList(@monthIndex)">
                                        <h6>@month.DisplayName </h6>
                                    </button>
                                </li>
                            }
                        }
                    }
                </ul>
            </div>
        </nav>

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Dashboard</h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group me-2">
                        <p id="item_picked_total">
                            <h2>25000k</h2>
                        </p>
                    </div>
                </div>
            </div>

            <canvas class="my-4 w-100" id="myChart" width="900" height="380"></canvas>

            <h2>Month details</h2>
            <div class="table-responsive">
                <table class="table table-striped table-sm">
                    <tr>
                        <td>Total hours</td>
                        <td>Evening hours</td>
                        <td>Saturday hours</td>
                        <td>Sunday hours</td>
                    </tr>
                    <tr>
                        <td>Total hours</td>
                        <td>Evening hours</td>
                        <td>Saturday hours</td>
                        <td>Sunday hours</td>
                    </tr>
                </table>
            </div>
            <hr />
            <h2>Shifts</h2>
            <div class="table-responsive">
                <table class="table table-striped table-sm">
                    <tr>
                        <td>Shift date</td>
                        <td>Shift salary</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td></td>

                    </tr>
                </table>
            </div>
        </main>
    </div>
</div>








<!-- OTHER STUFF STARTS HERE -------------------------------------------->











<div class="alert alert-danger" role="alert">
    <h4 class="alert-heading">Attention!</h4>
    <p>
        As of launch there is much to be desired when it comes to calculations of salary. Many implementations are NOT correct, however they are somewhat close to the desired result.
        Especially holiday reduction (helligdags reduktion) and tax-calculations are not implemented properly.
    </p>
</div>
<p>
    <h5>Your next paycheck is shown below</h5>
</p>
<hr />
<div id="accordion_x">
    <div class="card">
        <div class="card-header" id="heading_x">
            <h5 class="mb-0">
                <button class="btn btn-link" data-toggle="collapse" data-target="#collapse_x" aria-expanded="true" aria-controls="collapse_x">
                    <h3>@currentPeriod.DisplayName</h3>
                </button>
                <button class="btn btn-link btn-md float-right" type="button" disabled>
                    <h4>@Html.DisplayFor(modelItem => currentPeriod.TotalSalaryAfterTax)</h4>
                </button>
            </h5>
        </div>
        <div id="collapse_x" class="collapse show" aria-labelledby="heading_x" data-parent="#accordion_x">
            <div class="card-body flex-column-reverse flex-md-row">
                <table class="table">
                    <tr>
                        <td>Total hours: @Html.DisplayFor(modelItem => currentPeriod.TotalHoursWorked)</td>
                        <td>Evening hours: @Html.DisplayFor(modelItem => currentPeriod.EveningSalaryMinutes)</td>
                        <td>Saturday hours: @Html.DisplayFor(modelItem => currentPeriod.SaturdaySalaryMinutes)</td>
                        <td>Sunday hours: @Html.DisplayFor(modelItem => currentPeriod.SundaySalaryMinutes)</td>
                    </tr>
                    <tr>
                        <td>Hour salary: @Html.DisplayFor(modelItem => currentPeriod.HourSalaryTotal)</td>
                        <td>Evening salary: @Html.DisplayFor(modelItem => currentPeriod.EveningSalaryTotal)</td>
                        <td>Saturday salary: @Html.DisplayFor(modelItem => currentPeriod.SaturdaySalaryTotal)</td>
                        <td>Sunday salary: @Html.DisplayFor(modelItem => currentPeriod.SundaySalaryTotal)</td>
                    </tr>
                    <tr>
                        <td>Brutto salary: @Html.DisplayFor(modelItem => currentPeriod.MonthSalaryAsCurrency)</td>
                        <td>Netto salary: @Html.DisplayFor(modelItem => currentPeriod.TotalSalaryAfterTax)</td>
                        <td></td>
                        <td></td>
                    </tr>
                    @foreach(var shift in currentPeriod.Shifts)
                    {
                        <tr>
                            <td></td>
                            <td></td>
                            <td align="left">
                                @Html.DisplayFor(modelItem => shift.DisplayDateTime)
                            </td>
                            <td align="right">
                                @Html.DisplayFor(modelItem => shift.SalaryAsCurrency)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>
<br />
<br />
<p>
    <h5>Below are all the pay-periods found in the search listed. Click the tiles to expand them.</h5>
</p>
<hr />
@{
    int i = 0;
    Model.Reverse();

}
<div class="panel-group" id="accordion_@i">
    @foreach (YearModel year in Model)
    {
        year.Months.Reverse();
        @foreach (MonthModel month in year.Months)
        {
            <div class="accordion" id="accordionParent_@i">
                <div class="card">
                    <div class="card-header" id="heading_@i">
                        <h2 class="mb-0">
                            <button class="btn btn-link btn-md float-left" type="button" data-toggle="collapse" data-target="#collapse_@i" aria-expanded="false" aria-controls="collapse_@i">
                                <h3>@month.DisplayName</h3>
                            </button>
                            <button class="btn btn-link btn-md float-right" type="button" disabled>
                                <h4>@Html.DisplayFor(modelItem => month.TotalSalaryAfterTax)</h4>
                            </button>
                        </h2>
                    </div>

                    <div id="collapse_@i" class="collapse" aria-labelledby="heading_@i" data-parent="#accordionParent_@i">
                        <div class="card-body flex-column-reverse flex-md-row">
                            <table class="table ">
                                <tr>
                                    <td>Total hours: @Html.DisplayFor(modelItem => month.TotalHoursWorked)</td>
                                    <td>Evening hours: @Html.DisplayFor(modelItem => month.EveningSalaryMinutes)</td>
                                    <td>Saturday hours: @Html.DisplayFor(modelItem => month.SaturdaySalaryMinutes)</td>
                                    <td>Sunday hours: @Html.DisplayFor(modelItem => month.SundaySalaryMinutes)</td>
                                </tr>
                                <tr>
                                    <td>Hour salary: @Html.DisplayFor(modelItem => month.HourSalaryTotal)</td>
                                    <td>Evening salary: @Html.DisplayFor(modelItem => month.EveningSalaryTotal)</td>
                                    <td>Saturday salary: @Html.DisplayFor(modelItem => month.SaturdaySalaryTotal)</td>
                                    <td>Sunday salary: @Html.DisplayFor(modelItem => month.SundaySalaryTotal)</td>
                                </tr>
                                <tr>
                                    <td>Brutto salary: @Html.DisplayFor(modelItem => month.MonthSalaryAsCurrency)</td>
                                    <td>Netto salary: @Html.DisplayFor(modelItem => month.TotalSalaryAfterTax)</td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                @foreach(var shift in month.Shifts)
                                {
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td align="left">
                                            @Html.DisplayFor(modelItem => shift.DisplayDateTime)
                                        </td>
                                        <td align="right">
                                            @Html.DisplayFor(modelItem => shift.SalaryAsCurrency)
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            i++;
        }
    }
</div>